/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms;

import communication.Communication;
import domain.Country;
import domain.Hall;
import domain.PlayerEngagement;
import domain.Season;
import domain.StaffMemberEngagement;
import domain.Team;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicComboBoxUI;
import models.PlayerEngagementsTeamModel;
import models.StaffEngagementsTeamModel;

/**
 *
 * @author HOME
 */
public class TeamInfoForm extends javax.swing.JDialog {

    private Team team;
    private List<Country> countries;
    private Hall hall;
    private List<Season> seasons;

    /**
     * Creates new form TeamAddForm
     */
    public TeamInfoForm(java.awt.Dialog parent, boolean modal, Team team) {
        super(parent, modal);
        initComponents();
        this.team = team;
        fillFields();
        seasons = Communication.getInstance().getAllSeasons();
        setComboBox();
        setTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTeamName = new javax.swing.JTextField();
        txtFounded = new javax.swing.JTextField();
        comboCountry = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        lblHall = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        comboSeason = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlayers = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        btnDeletePlayerEngagement = new javax.swing.JButton();
        btnAddPlayerEngagement = new javax.swing.JButton();
        btnDeleteStaffEngagement = new javax.swing.JButton();
        btnAddStaffEngagement = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Team name:");

        jLabel2.setText("Founded:");

        jLabel3.setText("Country:");

        jLabel4.setText("Hall:");

        jButton1.setText("Select hall");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update team");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        comboSeason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSeasonActionPerformed(evt);
            }
        });

        jLabel5.setText("Roster for season:");

        tblPlayers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Firstname", "Lastname", "Position"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPlayers);

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Firstname", "Lastname", "Position"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblStaff);

        btnDeletePlayerEngagement.setText("Delete player engagement");
        btnDeletePlayerEngagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePlayerEngagementActionPerformed(evt);
            }
        });

        btnAddPlayerEngagement.setText("Add player engagement");
        btnAddPlayerEngagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPlayerEngagementActionPerformed(evt);
            }
        });

        btnDeleteStaffEngagement.setText("Delete staff member engagement");
        btnDeleteStaffEngagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStaffEngagementActionPerformed(evt);
            }
        });

        btnAddStaffEngagement.setText("Add staff member engagement");
        btnAddStaffEngagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStaffEngagementActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete team");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTeamName)
                                    .addComponent(txtFounded, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(comboCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1)
                                    .addComponent(lblHall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)))
                        .addGap(97, 97, 97)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 135, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 185, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnDeleteStaffEngagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddStaffEngagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeletePlayerEngagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddPlayerEngagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFounded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHall)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(btnDelete)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddPlayerEngagement)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeletePlayerEngagement))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddStaffEngagement)
                        .addGap(7, 7, 7)
                        .addComponent(btnDeleteStaffEngagement)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new HallSelectionForm(this, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (hall == null || txtTeamName.getText().isEmpty() || txtFounded.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Not entered all informations");
            return;
        }
        try {
            String teamName = txtTeamName.getText().trim();
            int founded = Integer.parseInt(txtFounded.getText());
            Country country = countries.get(comboCountry.getSelectedIndex());
            Team team = new Team(teamName, founded, country, hall);
            Communication.getInstance().updateTeam(team);
            dispose();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "founded should be number");
            return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboSeasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSeasonActionPerformed

    }//GEN-LAST:event_comboSeasonActionPerformed

    private void btnAddPlayerEngagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPlayerEngagementActionPerformed
        new AddPlayerEngagementForm(this, true, team).setVisible(true);
        List<PlayerEngagement> engagements = Communication.getInstance().getPlayerEngagementsOfTeam(team);
        tblPlayers.setModel(new PlayerEngagementsTeamModel(engagements));
        Season season = seasons.get(comboSeason.getSelectedIndex());
        PlayerEngagementsTeamModel petm = (PlayerEngagementsTeamModel) tblPlayers.getModel();
        petm.showSeason(season);
    }//GEN-LAST:event_btnAddPlayerEngagementActionPerformed

    private void btnDeletePlayerEngagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePlayerEngagementActionPerformed
        int row = tblPlayers.getSelectedRow();
        if (row == -1) {
            return;
        }
        PlayerEngagementsTeamModel petm = (PlayerEngagementsTeamModel) tblPlayers.getModel();
        PlayerEngagement engagement = petm.getEngagement(row);
        Communication.getInstance().deletePlayerEngagement(engagement);
        petm.showSeason(seasons.get(comboSeason.getSelectedIndex()));
    }//GEN-LAST:event_btnDeletePlayerEngagementActionPerformed

    private void btnAddStaffEngagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStaffEngagementActionPerformed
        new AddStaffMemberEngagementForm(this, true, team).setVisible(true);
        List<StaffMemberEngagement> engagements = Communication.getInstance().getStaffMemberEngagementsOfTeam(team);
        tblStaff.setModel(new StaffEngagementsTeamModel(engagements));
        Season season = seasons.get(comboSeason.getSelectedIndex());
        StaffEngagementsTeamModel setm = (StaffEngagementsTeamModel) tblStaff.getModel();
        setm.showSeason(season);
    }//GEN-LAST:event_btnAddStaffEngagementActionPerformed

    private void btnDeleteStaffEngagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStaffEngagementActionPerformed
        int row = tblStaff.getSelectedRow();
        if (row == -1) {
            return;
        }
        StaffEngagementsTeamModel setm = (StaffEngagementsTeamModel) tblStaff.getModel();
        StaffMemberEngagement engagement = setm.getEngagement(row);
        Communication.getInstance().deleteStaffMemberEngagement(engagement);
        setm.showSeason(seasons.get(comboSeason.getSelectedIndex()));
    }//GEN-LAST:event_btnDeleteStaffEngagementActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Communication.getInstance().deleteTeam(team);
        dispose();
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPlayerEngagement;
    private javax.swing.JButton btnAddStaffEngagement;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeletePlayerEngagement;
    private javax.swing.JButton btnDeleteStaffEngagement;
    private javax.swing.JComboBox<String> comboCountry;
    private javax.swing.JComboBox<String> comboSeason;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHall;
    private javax.swing.JTable tblPlayers;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextField txtFounded;
    private javax.swing.JTextField txtTeamName;
    // End of variables declaration//GEN-END:variables

    private void setComboBox() {
        countries = Communication.getInstance().getAllCountries();
        for (Country country : countries) {
            comboCountry.addItem(country.getCountryName());
        }
        for (Season season : seasons) {
            comboSeason.addItem(season.toString());
        }
        comboSeason.setSelectedIndex(seasons.size() - 1);
        comboSeason.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    Season season = seasons.get(comboSeason.getSelectedIndex());
                    PlayerEngagementsTeamModel petm = (PlayerEngagementsTeamModel) tblPlayers.getModel();
                    petm.showSeason(season);
                    StaffEngagementsTeamModel setm = (StaffEngagementsTeamModel) tblStaff.getModel();
                    setm.showSeason(season);
                }
            }

        });
    }

    public void setHall(Hall hall) {
        this.hall = hall;
        lblHall.setText(hall.getHallName() + ", " + hall.getAddress());
    }

    private void fillFields() {
        txtTeamName.setText(team.getTeamName());
        txtFounded.setText(String.valueOf(team.getFounded()));
        setHall(team.getHall());
        comboCountry.setSelectedItem(team.getCountry().getCountryName());
    }

    private void setTables() {
        List<PlayerEngagement> playerEngagements = Communication.getInstance().getPlayerEngagementsOfTeam(team);
        PlayerEngagementsTeamModel petm = new PlayerEngagementsTeamModel(playerEngagements);
        petm.showSeason(seasons.get(seasons.size() - 1));
        tblPlayers.setModel(petm);
        List<StaffMemberEngagement> staffEngagements = Communication.getInstance().getStaffMemberEngagementsOfTeam(team);
        StaffEngagementsTeamModel setm = new StaffEngagementsTeamModel(staffEngagements);
        setm.showSeason(seasons.get(seasons.size() - 1));
        tblStaff.setModel(setm);
    }

}
